services:
  ray_service:
    build: ./ray_parallel
    ports:
      - "6379:6379"     # Puerto interno de Ray cluster
      - "8265:8265"     # Ray Dashboard
      - "8000:8000"     # Ray Serve API
    volumes:
      - ./ray_parallel:/app:z
      - ray_tmp:/tmp/ray
    shm_size: '2gb'
    networks:
      - ml_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      - RAY_DISABLE_USAGE_STATS=1
      - PYTHONUNBUFFERED=1
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
    restart: unless-stopped

  api_service:
    build: ./api
    ports:
      - "8001:8000"   
    depends_on:
      ray_service:
        condition: service_healthy
    networks:
      - ml_network
    environment:
      - RAY_SERVICE_URL=http://ray_service:8000
      - PYTHONUNBUFFERED=1
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
    volumes:
      - ./api:/app:z
    restart: on-failure

  client:
    build: ./frontend
    ports:
      - "3000:80"    
    environment:
      # - VITE_API_URL=http://api_service:8000
      - VITE_API_URL=${VITE_API_URL:-http://localhost:8001}
      - PUBLIC_IP=${AWS_PUBLIC_IP:-localhost}
    depends_on:
      - api_service
    networks:
      - ml_network

volumes:
  ray_tmp:

networks:
  ml_network:
    driver: bridge